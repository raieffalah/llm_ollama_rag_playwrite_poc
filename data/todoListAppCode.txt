<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List App</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f5f5;
            color: #333;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 600px;
            margin: 0 auto;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }
        
        h1 {
            text-align: center;
            margin-bottom: 20px;
            color: #4285f4;
        }
        
        .input-container {
            display: flex;
            margin-bottom: 20px;
        }
        
        #todo-input {
            flex-grow: 1;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 4px 0 0 4px;
            outline: none;
        }
        
        #add-button {
            background-color: #4285f4;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            font-size: 16px;
            border-radius: 0 4px 4px 0;
            transition: background-color 0.3s;
        }
        
        #add-button:hover {
            background-color: #3367d6;
        }
        
        .filters {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
            gap: 10px;
        }
        
        .filter-btn {
            background-color: #f1f1f1;
            border: none;
            padding: 8px 12px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        
        .filter-btn.active {
            background-color: #4285f4;
            color: white;
        }
        
        .filter-btn:hover {
            background-color: #e4e4e4;
        }
        
        .filter-btn.active:hover {
            background-color: #3367d6;
        }
        
        .todo-list {
            list-style-type: none;
        }
        
        .todo-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
            animation: fadeIn 0.5s;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .todo-item:last-child {
            border-bottom: none;
        }
        
        .todo-item input[type="checkbox"] {
            margin-right: 10px;
            width: 18px;
            height: 18px;
            cursor: pointer;
        }
        
        .todo-text {
            flex-grow: 1;
            font-size: 16px;
            transition: color 0.3s;
        }
        
        .completed .todo-text {
            text-decoration: line-through;
            color: #888;
        }
        
        .delete-btn {
            background-color: #ff5252;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            cursor: pointer;
            margin-left: 10px;
            transition: background-color 0.3s;
        }
        
        .delete-btn:hover {
            background-color: #ff1a1a;
        }
        
        .clear-completed {
            background-color: #f1f1f1;
            border: none;
            padding: 8px 12px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 14px;
            margin-top: 20px;
            transition: background-color 0.3s;
        }
        
        .clear-completed:hover {
            background-color: #e4e4e4;
        }
        
        .empty-message {
            text-align: center;
            margin: 20px 0;
            color: #888;
            font-style: italic;
        }
        
        .stats {
            margin-top: 20px;
            text-align: center;
            color: #888;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Todo List</h1>
        
        <div class="input-container">
            <input type="text" id="todo-input" placeholder="Add a new task...">
            <button id="add-button">Add</button>
        </div>
        
        <div class="filters">
            <button class="filter-btn active" data-filter="all">All</button>
            <button class="filter-btn" data-filter="active">Active</button>
            <button class="filter-btn" data-filter="completed">Completed</button>
        </div>
        
        <ul class="todo-list" id="todo-list"></ul>
        
        <div class="stats" id="stats"></div>
        
        <button class="clear-completed" id="clear-completed">Clear Completed</button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM elements
            const todoInput = document.getElementById('todo-input');
            const addButton = document.getElementById('add-button');
            const todoList = document.getElementById('todo-list');
            const filterButtons = document.querySelectorAll('.filter-btn');
            const clearCompletedBtn = document.getElementById('clear-completed');
            const statsElement = document.getElementById('stats');
            
            // App state
            let todos = JSON.parse(localStorage.getItem('todos')) || [];
            let currentFilter = 'all';
            
            // Initialize app
            renderTodos();
            updateStats();
            
            // Event listeners
            addButton.addEventListener('click', addTodo);
            todoInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    addTodo();
                }
            });
            
            clearCompletedBtn.addEventListener('click', clearCompleted);
            
            filterButtons.forEach(button => {
                button.addEventListener('click', () => {
                    // Update active class
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    button.classList.add('active');
                    
                    // Update filter
                    currentFilter = button.getAttribute('data-filter');
                    renderTodos();
                });
            });
            
            // Functions
            function addTodo() {
                const todoText = todoInput.value.trim();
                
                if (todoText !== '') {
                    const newTodo = {
                        id: Date.now(),
                        text: todoText,
                        completed: false
                    };
                    
                    todos.push(newTodo);
                    saveTodos();
                    renderTodos();
                    updateStats();
                    
                    // Clear input
                    todoInput.value = '';
                    todoInput.focus();
                }
            }
            
            function deleteTodo(id) {
                todos = todos.filter(todo => todo.id !== id);
                saveTodos();
                renderTodos();
                updateStats();
            }
            
            function toggleTodo(id) {
                todos = todos.map(todo => {
                    if (todo.id === id) {
                        return { ...todo, completed: !todo.completed };
                    }
                    return todo;
                });
                
                saveTodos();
                renderTodos();
                updateStats();
            }
            
            function clearCompleted() {
                todos = todos.filter(todo => !todo.completed);
                saveTodos();
                renderTodos();
                updateStats();
            }
            
            function renderTodos() {
                // Clear the list
                todoList.innerHTML = '';
                
                // Filter todos based on current filter
                let filteredTodos = todos;
                if (currentFilter === 'active') {
                    filteredTodos = todos.filter(todo => !todo.completed);
                } else if (currentFilter === 'completed') {
                    filteredTodos = todos.filter(todo => todo.completed);
                }
                
                // Show message if no todos
                if (filteredTodos.length === 0) {
                    const emptyMessage = document.createElement('p');
                    emptyMessage.className = 'empty-message';
                    emptyMessage.textContent = 'No tasks found';
                    todoList.appendChild(emptyMessage);
                    return;
                }
                
                // Render todos
                filteredTodos.forEach(todo => {
                    const todoItem = document.createElement('li');
                    todoItem.className = 'todo-item';
                    if (todo.completed) {
                        todoItem.classList.add('completed');
                    }
                    
                    const checkbox = document.createElement('input');
                    checkbox.type = 'checkbox';
                    checkbox.checked = todo.completed;
                    checkbox.addEventListener('change', () => toggleTodo(todo.id));
                    
                    const todoText = document.createElement('span');
                    todoText.className = 'todo-text';
                    todoText.textContent = todo.text;
                    
                    const deleteBtn = document.createElement('button');
                    deleteBtn.className = 'delete-btn';
                    deleteBtn.textContent = 'Delete';
                    deleteBtn.addEventListener('click', () => deleteTodo(todo.id));
                    
                    todoItem.appendChild(checkbox);
                    todoItem.appendChild(todoText);
                    todoItem.appendChild(deleteBtn);
                    
                    todoList.appendChild(todoItem);
                });
            }
            
            function updateStats() {
                const total = todos.length;
                const completed = todos.filter(todo => todo.completed).length;
                const active = total - completed;
                
                statsElement.textContent = `${total} total • ${active} active • ${completed} completed`;
            }
            
            function saveTodos() {
                localStorage.setItem('todos', JSON.stringify(todos));
            }
        });
    </script>
</body>
</html>